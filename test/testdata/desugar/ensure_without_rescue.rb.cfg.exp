digraph "ensure_without_rescue.rb" {
subgraph "cluster_::Object#main" {
    label = "::Object#main";
    color = blue;
    "bb::Object#main_0" [shape = invhouse];
    "bb::Object#main_1" [shape = parallelogram];

    "bb::Object#main_0" [
        label = "block[id=0, rubyBlockId=0]()\l<self>: Object = cast(<self>: NilClass, Object);\l<exceptionValue>$3: T.untyped = <unanalyzable>\l<exceptionValue>$3: T.untyped\l"
    ];

    "bb::Object#main_0" -> "bb::Object#main_3" [style="bold"];
    "bb::Object#main_0" -> "bb::Object#main_4" [style="tapered"];

    "bb::Object#main_1" [
        label = "block[id=1, rubyBlockId=0]()\l<unconditional>\l"
    ];

    "bb::Object#main_1" -> "bb::Object#main_1" [style="bold"];
    "bb::Object#main_3" [
        label = "block[id=3, rubyBlockId=2](<returnMethodTemp>$2: T.untyped, <self>: Object)\l<gotoDeadTemp>$5: TrueClass(true) = true\l<unconditional>\l"
    ];

    "bb::Object#main_3" -> "bb::Object#main_6" [style="bold"];
    "bb::Object#main_4" [
        label = "block[id=4, rubyBlockId=1](<self>: Object)\l<returnMethodTemp>$2: T.untyped = <self>: Object.a()\l<exceptionValue>$3: T.untyped = <unanalyzable>\l<exceptionValue>$3: T.untyped\l"
    ];

    "bb::Object#main_4" -> "bb::Object#main_3" [style="bold"];
    "bb::Object#main_4" -> "bb::Object#main_5" [style="tapered"];

    "bb::Object#main_5" [
        label = "block[id=5, rubyBlockId=4](<returnMethodTemp>$2: T.untyped, <self>: Object)\l<unconditional>\l"
    ];

    "bb::Object#main_5" -> "bb::Object#main_6" [style="bold"];
    "bb::Object#main_6" [
        label = "block[id=6, rubyBlockId=3](<returnMethodTemp>$2: T.untyped, <self>: Object, <gotoDeadTemp>$5: T.nilable(TrueClass))\l<throwAwayTemp>$6: T.untyped = <self>: Object.b()\l<gotoDeadTemp>$5: T.nilable(TrueClass)\l"
    ];

    "bb::Object#main_6" -> "bb::Object#main_1" [style="bold"];
    "bb::Object#main_6" -> "bb::Object#main_7" [style="tapered"];

    "bb::Object#main_7" [
        label = "block[id=7, rubyBlockId=0](<returnMethodTemp>$2: T.untyped)\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.untyped\l<unconditional>\l"
    ];

    "bb::Object#main_7" -> "bb::Object#main_1" [style="bold"];
}

subgraph "cluster_::Object#a" {
    label = "::Object#a";
    color = blue;
    "bb::Object#a_0" [shape = invhouse];
    "bb::Object#a_1" [shape = parallelogram];

    "bb::Object#a_0" [
        label = "block[id=0, rubyBlockId=0]()\l<self>: Object = cast(<self>: NilClass, Object);\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass\l<unconditional>\l"
    ];

    "bb::Object#a_0" -> "bb::Object#a_1" [style="bold"];
    "bb::Object#a_1" [
        label = "block[id=1, rubyBlockId=0]()\l<unconditional>\l"
    ];

    "bb::Object#a_1" -> "bb::Object#a_1" [style="bold"];
}

subgraph "cluster_::Object#b" {
    label = "::Object#b";
    color = blue;
    "bb::Object#b_0" [shape = invhouse];
    "bb::Object#b_1" [shape = parallelogram];

    "bb::Object#b_0" [
        label = "block[id=0, rubyBlockId=0]()\l<self>: Object = cast(<self>: NilClass, Object);\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass\l<unconditional>\l"
    ];

    "bb::Object#b_0" -> "bb::Object#b_1" [style="bold"];
    "bb::Object#b_1" [
        label = "block[id=1, rubyBlockId=0]()\l<unconditional>\l"
    ];

    "bb::Object#b_1" -> "bb::Object#b_1" [style="bold"];
}

subgraph "cluster_::<Class:<root>>#<static-init>" {
    label = "::<Class:<root>>#<static-init>";
    color = blue;
    "bb::<Class:<root>>#<static-init>_0" [shape = invhouse];
    "bb::<Class:<root>>#<static-init>_1" [shape = parallelogram];

    "bb::<Class:<root>>#<static-init>_0" [
        label = "block[id=0, rubyBlockId=0]()\l<self>: T.class_of(<root>) = cast(<self>: NilClass, AppliedType {\l  klass = <S <C <U <root>>> $1>\l  targs = [\l    <C <U <AttachedClass>>> = SelfTypeParam(<S <C <U <root>>> $1><C <U <AttachedClass>>>)\l  ]\l});\l<statTemp>$4: T.class_of(Sorbet::Private::Static) = alias <C Static>\l<statTemp>$6: Symbol(:\"main\") = :\"main\"\l<statTemp>$3: Symbol(:\"main\") = <statTemp>$4: T.class_of(Sorbet::Private::Static).keep_def(<self>: T.class_of(<root>), <statTemp>$6: Symbol(:\"main\"))\l<statTemp>$8: T.class_of(Sorbet::Private::Static) = alias <C Static>\l<statTemp>$10: Symbol(:\"a\") = :\"a\"\l<statTemp>$7: Symbol(:\"a\") = <statTemp>$8: T.class_of(Sorbet::Private::Static).keep_def(<self>: T.class_of(<root>), <statTemp>$10: Symbol(:\"a\"))\l<statTemp>$12: T.class_of(Sorbet::Private::Static) = alias <C Static>\l<statTemp>$14: Symbol(:\"b\") = :\"b\"\l<statTemp>$11: Symbol(:\"b\") = <statTemp>$12: T.class_of(Sorbet::Private::Static).keep_def(<self>: T.class_of(<root>), <statTemp>$14: Symbol(:\"b\"))\l<statTemp>$15: T.untyped = <self>: T.class_of(<root>).main()\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: NilClass\l<unconditional>\l"
    ];

    "bb::<Class:<root>>#<static-init>_0" -> "bb::<Class:<root>>#<static-init>_1" [style="bold"];
    "bb::<Class:<root>>#<static-init>_1" [
        label = "block[id=1, rubyBlockId=0]()\l<unconditional>\l"
    ];

    "bb::<Class:<root>>#<static-init>_1" -> "bb::<Class:<root>>#<static-init>_1" [style="bold"];
}

}

